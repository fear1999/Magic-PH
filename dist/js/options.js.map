{"version":3,"file":"options.js","mappings":";;;;;;;;;;;AAAA,IAAMA,IAAI,GAAG,OAAOC,OAAP,IAAkB,WAAlB,GAAgCC,MAAhC,GAAyCD,OAAtD;AACAD,IAAI,CAACG,OAAL,CAAaC,KAAb,CAAmBC,GAAnB,CAAwBC,YAAD,IAAkB;AAAA;;AACtCC,EAAAA,KAAK,4BACJC,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,CADI,yEAEJC,OAAO,CAACC,GAAR,gCAAoCC,MAApC,EAFF,EAGGC,MAAM;AACLC,IAAAA,UAAU,EAAE,MADP;AAELC,IAAAA,UAAU,EAAE,IAFP;AAGLC,IAAAA,OAAO,EAAE,KAHJ;AAILC,IAAAA,QAAQ,EAAE,KAJL;AAKLC,IAAAA,SAAS,EAAE,KALN;AAMLC,IAAAA,OAAO,EAAE,KANJ;AAOLC,IAAAA,WAAW,EAAE;AACXC,MAAAA,IAAI,EAAE,GADK;AAEXC,MAAAA,KAAK,EAAE,kBAFI;AAGXC,MAAAA,QAAQ,EAAE,kBAHC;AAIXC,MAAAA,QAAQ,EAAE,mCAJC;AAKXC,MAAAA,SAAS,EAAE,gBALA;AAMXC,MAAAA,KAAK,EAAE,OANI;AAOXC,MAAAA,OAAO,EAAE,UAPE;AAQXC,MAAAA,IAAI,EAAE,UARK;AASXC,MAAAA,QAAQ,EAAE,cATC;AAUXC,MAAAA,KAAK,EAAE,MAVI;AAWXC,MAAAA,MAAM,EAAE,sBAXG;AAYXC,MAAAA,SAAS,EAAE,sBAZA;AAaXC,MAAAA,SAAS,EAAE,uCAbA;AAcXC,MAAAA,UAAU,EAAE,oBAdD;AAeXC,MAAAA,MAAM,EAAE;AAfG,KAPR;AAwBLC,IAAAA,WAAW,EAAE,CACX,MADW,EAEX,QAFW,EAGX,YAHW,EAIX,UAJW,EAKX,SALW,EAMX,QANW,EAOX,WAPW;AAxBR,KAiCF9B,YAjCE,CAHT;;AAsCA,OAAK,IAAI+B,IAAT,IAAiBxB,MAAjB,EAAyB;AACvBwB,IAAAA,IAAI,IAAI9B,KAAK,CAAC+B,QAAd,GACI/B,KAAK,CAAC+B,QAAN,CAAeD,IAAf,EAAqBE,IAArB,IAA6B,UAA7B,GACGhC,KAAK,CAAC+B,QAAN,CAAeD,IAAf,EAAqBG,OAArB,GAA+B3B,MAAM,CAACwB,IAAD,CADxC,GAEG9B,KAAK,CAAC+B,QAAN,CAAeD,IAAf,EAAqBI,KAArB,GAA6B5B,MAAM,CAACwB,IAAD,CAH1C,GAII,KAJJ;AAKD;;AAED9B,EAAAA,KAAK,CAACmC,gBAAN,CAAuB,QAAvB,EAAkCC,CAAD,IAAO;AACtC,QAAIC,GAAG;AAAG;AAAiCD,IAAAA,CAAC,CAAC/B,MAA7C;AACAgC,IAAAA,GAAG,CAACL,IAAJ,IAAY,UAAZ,GACK1B,MAAM,CAAC+B,GAAG,CAACC,IAAL,CAAN,GAAmBD,GAAG,CAACJ,OAD5B,GAEK3B,MAAM,CAAC+B,GAAG,CAACC,IAAL,CAAN,GAAmBD,GAAG,CAACH,KAF5B;AAGAzC,IAAAA,IAAI,CAACG,OAAL,CAAaC,KAAb,CAAmB0C,GAAnB,CAAuBjC,MAAvB;AACD,GAND;AAOD,CAtDD,E","sources":["webpack:///./options.js"],"sourcesContent":["const brws = typeof browser == \"undefined\" ? chrome : browser;\r\nbrws.storage.local.get((storedConfig) => {\r\n  ($form =\r\n    document.querySelector(\"form.magicph_cfg\") ??\r\n    console.log(`[MagicPH] can't find ${target}`)),\r\n    (config = {\r\n      altplayers: \"none\",\r\n      autoscroll: true,\r\n      blurimg: false,\r\n      comments: false,\r\n      topbutton: false,\r\n      sidebar: false,\r\n      headerLinks: {\r\n        Home: \"/\",\r\n        Video: \"/video?o=tr&hd=1\",\r\n        Category: \"/categories?o=al\",\r\n        Pornstar: \"/pornstars?performerType=pornstar\",\r\n        Community: \"/user/discover\",\r\n        Photo: \"/gifs\",\r\n        Premium: \"/premium\",\r\n        Gift: \"/premium\",\r\n        GPremium: \"/gay/premium\",\r\n        GHome: \"/gay\",\r\n        GVideo: \"/gay/video?o=tr&hd=1\",\r\n        GCategory: \"/gay/categories?o=al\",\r\n        GPornstar: \"/gay/pornstars?performerType=pornstar\",\r\n        GCommunity: \"/user/discover/gay\",\r\n        GPhoto: \"/gay/gifs?o=tr\",\r\n      },\r\n      headerOrder: [\r\n        \"home\",\r\n        \"videos\",\r\n        \"categories\",\r\n        \"pornstar\",\r\n        \"realsex\",\r\n        \"photos\",\r\n        \"customize\",\r\n      ],\r\n      ...storedConfig,\r\n    });\r\n  for (let prop in config) {\r\n    prop in $form.elements\r\n      ? $form.elements[prop].type == \"checkbox\"\r\n        ? ($form.elements[prop].checked = config[prop])\r\n        : ($form.elements[prop].value = config[prop])\r\n      : false;\r\n  }\r\n\r\n  $form.addEventListener(\"change\", (e) => {\r\n    let $el = /** @type {HTMLInputElement} */ (e.target);\r\n    $el.type == \"checkbox\"\r\n      ? (config[$el.name] = $el.checked)\r\n      : (config[$el.name] = $el.value);\r\n    brws.storage.local.set(config);\r\n  });\r\n});"],"names":["brws","browser","chrome","storage","local","get","storedConfig","$form","document","querySelector","console","log","target","config","altplayers","autoscroll","blurimg","comments","topbutton","sidebar","headerLinks","Home","Video","Category","Pornstar","Community","Photo","Premium","Gift","GPremium","GHome","GVideo","GCategory","GPornstar","GCommunity","GPhoto","headerOrder","prop","elements","type","checked","value","addEventListener","e","$el","name","set"],"sourceRoot":""}